@mixin sidebar-sizes($breakpoint: '') {
	@if $breakpoint != '' {
		$breakpoint: -#{$breakpoint};
	}
	@each $index in map-keys($sidebar-sizes) {
		$size: map-get($sidebar-sizes, $index);
		.sidebar-size-#{$index}#{$breakpoint} {
			width: $size;
		}
	}
}
@mixin layout-sidebar($breakpoint: '') {
	@if $breakpoint != '' {
		$breakpoint: -#{$breakpoint};
	}
	@each $index in map-keys($sidebar-sizes) {
		$size: map-get($sidebar-sizes, $index);
		@each $d, $direction in (l: left, r: right) {
			.layout-content,
			.st-container > .st-pusher > .st-content > .layout-content {
				.layout-sidebar-#{$d}#{$index}#{$breakpoint} > & {
					margin-#{$direction}: $size;
				}
			}
		}
	}
}
@mixin sidebar-percent($breakpoint: '') {
	@if $breakpoint != '' {
		$breakpoint: -#{$breakpoint};
	}
	@for $percent from ceil($sidebar-percent-from / $sidebar-percent-step) through ceil($sidebar-percent-through / $sidebar-percent-step) {
		$percent: $percent * $sidebar-percent-step;
		.sidebar-size-#{$percent}pc#{$breakpoint} {
			width: round(percentage($percent / 100));
		}
		@each $d, $direction in (l: left, r: right) {
			.layout-content,
			.st-container > .st-pusher > .st-content > .layout-content {
				.layout-sidebar-#{$d}#{$percent}pc#{$breakpoint} > & {
					margin-#{$direction}: round(percentage($percent / 100));
				}
			}
		}
	}
}
@mixin sidebar-visible($breakpoint: '') {
	@if $breakpoint != '' {
		$breakpoint: -#{$breakpoint};
	}
	&.sidebar-visible#{$breakpoint} {
		display: block;
	}
}